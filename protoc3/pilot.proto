syntax = "proto3";

package com.xiang.proto.pilot;

import "common.proto";

//服务器根目录 http://www.sportx-park.com/

// 注册
// /pilot/register
message Request10001 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		string phone = 1;
		string username = 2;
		string avatarKey = 3;                        // 上传到七牛的key
		string bucketName = 4;                       // 上传到七牛的bucket
		string password = 5;                         // 密码MD5加密
		Sex sex = 6;
	}
}

message Response10001 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		int32 userId = 1;                            // 返回的用户id
		string userKey = 2;                          // 用户的私钥
	}
}

// 登录
// /pilot/login
message Request10002 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		string phone = 1;
		string password = 2;                         // 密码MD5加密
	}
}

message Response10002 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		BriefUser briefUser = 1;                     // 返回用户简要信息
		string userKey = 2;                          // 返回用户私钥
		string rongyunToken = 3;                     // 融云聊天使用的token
		Sex sex = 4;
		string sign = 5;                              // 个性签名
		string phone = 6;
	}
}

// 更新我的个人信息
// /pilot/updateMyInfo
message Request10004 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		string userName = 1;
		string avatarKey = 2;
		string bucketName = 3;                        // 获取上传token时得到的bucketName
		Sex sex = 4;                                  // 待测试，如果不传性别会不会得到默认为男性
		string sign = 5;                              // 个性签名
		string phone = 6;
	}
}

message Response10004 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		string avatarUrl = 1;                             // 如果是更新头像，则会返回用户的新头像url
	}
}

// 获取我（或别人的）的相册（动态列表）
// /pilot/getMyTrend
message Request10005 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		int32 pageIndex = 1;                 // 需要获取的页数，从0开始
		int32 userId = 2;                   // 如果传该字段，则是获取该userId对应的用户的相册，否则获取我的
	}
}

message Response10005 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		repeated Trend trends = 1;
		int32 maxCountPerPage = 2;                   // 每页的最大数量，如果trends小于该数量，则没有加载更多
	}
}

// 获取我的消息列表
// /pilot/getMyCommentMessage
message Request10006 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		int32 pageIndex = 1;                         // 需要获取的页数，从0开始
	}
}

message Response10006 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		repeated CommentMessage commentMessages = 1;
		int32 maxCountPerPage = 2;                   // 每页的最大数量，如果messages小于该数量，则没有加载更多
	}
}

// 删除我的消息
// /pilot/deleteCommentMessage
message Request10007 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		bool clearAll = 1;                        // 清空消息，如果是true，则清空所有消息
		repeated int32 messageIds = 2;            // 需要删除的消息id
	}
}

message Response10007 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		
	}
}

// 获取我的X币数量
// /pilot/getMyXMoney
message Request10008 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
	}
}

message Response10008 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		int32 count = 1;                           // X币数量
	}
}

// 获取用户关注的列表
// /pilot/getUserGuanzhu
message Request10009 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		int32 userId = 1;                        // 如果不传该字段，则获取我的关注列表
	}
}

message Response10009 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		repeated BriefUser briefUsers = 1;        // 关注列表
	}
}

// 获取用户粉丝的列表
// /pilot/getUserFensi
message Request10010 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		int32 userId = 1;                        // 如果不传该字段，则获取我的粉丝列表
	}
}

message Response10010 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		repeated BriefUser briefUsers = 1;        // 粉丝列表
	}
}

// 关注或取消关注别人
// /pilot/guanzhuUser
message Request10011 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		int32 toUserId = 1;
		bool isFollow = 2;                        // true:关注 false：取消关注
	}
}

message Response10011 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
	}
}

// 获取用户详情
// /pilot/getUserDetail
message Request10012 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		int32 userId = 1;
	}
}

message Response10012 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		DetailUser detailUser = 1;
	}
}

// 搜索用户
// /pilot/searchUser
message Request10013 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		string keyword = 1;
		int32 pageIndex = 2;
	}
}

message Response10013 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		repeated SearchedUser searchedUsers = 1;
		int32 maxCountPerPage = 2;
	}
}

// 搜索场馆
// /pilot/searchGym
message Request10014 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		string keyword = 1;
		int32 pageIndex = 2;
	}
}

message Response10014 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		repeated BriefGym briefGyms = 1;
		int32 maxCountPerPage = 2;
	}
}

// 获取热门搜索关键字列表
// /pilot/getSearchKeys
message Request10015 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
	}
}

message Response10015 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		repeated string keys = 1;     // 注意，如果该数组为空，则data会是null，客户端做好判空准备
	}
}

// 验证手机号是否已经注册
// /pilot/verifyPhoneCanUse
message Request10016 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		string phone = 1;
	}
}

message Response10016 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		bool canUser = 1;
	}
}

// 获取简要消息内容
// /pilot/getTrendBriefMessage
message Request10017 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
	
	}
}

message Response10017 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		TrendBriefMessage trendBriefMessage = 1;
	}
}

// 获取用户简要信息
// /pilot/getBriefUser
message Request10018 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		int32 userId = 1;
	}
}

message Response10018 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		BriefUser briefUser = 1;
	}
}

//获取推荐用户周围——动态最多的人
// /pilot/getRecommendUser
message Request10019 {
	RequestCommon common = 1;
	Params params = 2;
	message Params {
		float longitude = 1;
		float latitude = 2;
	}
}
message Response10018 {
	ResponseCommon common = 1;
	Data data = 2;
	message Data {
		repeated BriefUser briefUser = 1;
	}
}